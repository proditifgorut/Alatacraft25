/*
# [Comprehensive Schema Fix & Seeding]
This script corrects all previous schema errors by ensuring all required tables and columns exist before attempting to insert data.
It adds the 'stock' and 'image_urls' columns to the 'products' table if they are missing and ensures all foreign keys are correctly typed.
This script is idempotent and can be run multiple times without causing errors.

## Metadata:
- Schema-Category: "Structural"
- Impact-Level: "Low"
- Requires-Backup: false
- Reversible: true
*/

-- 1. Create Categories Table
CREATE TABLE IF NOT EXISTS public.categories (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name text NOT NULL,
    slug text NOT NULL UNIQUE,
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- 2. Create Products Table (basic structure)
CREATE TABLE IF NOT EXISTS public.products (
    id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
    name text NOT NULL,
    description text,
    price numeric NOT NULL,
    rating numeric(2,1) CHECK (rating >= 0 AND rating <= 5),
    category_id bigint REFERENCES public.categories(id),
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Add missing columns to 'products' table if they don't exist.
-- This is the core fix for the repeated errors.
ALTER TABLE public.products ADD COLUMN IF NOT EXISTS image_urls text[];
ALTER TABLE public.products ADD COLUMN IF NOT EXISTS stock integer NOT NULL DEFAULT 0;

-- 3. Create Profiles Table
CREATE TABLE IF NOT EXISTS public.profiles (
  id uuid PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,
  full_name text,
  role text DEFAULT 'user'::text,
  updated_at timestamp with time zone
);

-- 4. Create Orders Table
CREATE TABLE IF NOT EXISTS public.orders (
    id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id uuid REFERENCES public.profiles(id),
    total_amount numeric NOT NULL,
    status text NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- 5. Create Order Items Table (with correct UUID reference)
CREATE TABLE IF NOT EXISTS public.order_items (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id uuid REFERENCES public.orders(id) ON DELETE CASCADE,
    product_id uuid REFERENCES public.products(id), -- Correctly references products.id as uuid
    quantity integer NOT NULL,
    price numeric NOT NULL
);

-- 6. Set up Trigger for new user profiles
CREATE OR REPLACE FUNCTION public.handle_new_user()
RETURNS TRIGGER AS $$
BEGIN
  INSERT INTO public.profiles (id, full_name, role)
  VALUES (new.id, new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'role');
  RETURN new;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Drop trigger if it exists, then create it
DROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;
CREATE TRIGGER on_auth_user_created
  AFTER INSERT ON auth.users
  FOR EACH ROW EXECUTE FUNCTION public.handle_new_user();

-- 7. Set up Row Level Security (RLS)
ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;
DROP POLICY IF EXISTS "Public profiles are viewable by everyone." ON public.profiles;
CREATE POLICY "Public profiles are viewable by everyone." ON public.profiles FOR SELECT USING (true);
DROP POLICY IF EXISTS "Users can insert their own profile." ON public.profiles;
CREATE POLICY "Users can insert their own profile." ON public.profiles FOR INSERT WITH CHECK (auth.uid() = id);
DROP POLICY IF EXISTS "Users can update own profile." ON public.profiles;
CREATE POLICY "Users can update own profile." ON public.profiles FOR UPDATE USING (auth.uid() = id);

-- 8. Seed Data (only if tables are empty)
DO $$
DECLARE
    tas_id bigint;
    dekorasi_id bigint;
    aksesori_id bigint;
    premium_id bigint;
BEGIN
    -- Seed Categories
    IF NOT EXISTS (SELECT 1 FROM public.categories) THEN
        INSERT INTO public.categories (name, slug) VALUES
        ('Tas', 'tas'),
        ('Dekorasi', 'dekorasi'),
        ('Aksesori Rumah', 'aksesori-rumah'),
        ('Premium', 'premium')
        ON CONFLICT (slug) DO NOTHING;
    END IF;

    SELECT id INTO tas_id FROM public.categories WHERE slug = 'tas';
    SELECT id INTO dekorasi_id FROM public.categories WHERE slug = 'dekorasi';
    SELECT id INTO aksesori_id FROM public.categories WHERE slug = 'aksesori-rumah';
    SELECT id INTO premium_id FROM public.categories WHERE slug = 'premium';

    -- Seed Products
    IF NOT EXISTS (SELECT 1 FROM public.products) THEN
        INSERT INTO public.products (name, description, price, image_urls, stock, rating, category_id) VALUES
        ('Tas Tote Premium', 'Tas anyaman eceng gondok dengan handle kulit asli.', 180000, ARRAY['https://img-wrapper.vercel.app/image?url=https://img-wrapper.vercel.app/image?url=https://placehold.co/300x300/8ea071/ffffff?text=Tas+Tote'], 20, 4.8, tas_id),
        ('Alas Meja Natural', 'Alas meja bundar untuk sentuhan alami di ruang makan.', 95000, ARRAY['https://img-wrapper.vercel.app/image?url=https://img-wrapper.vercel.app/image?url=https://placehold.co/300x300/b4a47e/ffffff?text=Alas+Meja'], 35, 4.5, aksesori_id),
        ('Hiasan Dinding Mandala', 'Hiasan dinding besar dengan pola mandala yang rumit.', 125000, ARRAY['https://img-wrapper.vercel.app/image?url=https://img-wrapper.vercel.app/image?url=https://placehold.co/300x300/a08d63/ffffff?text=Hiasan+Dinding'], 15, 4.7, dekorasi_id),
        ('Tempat Pensil Minimalis', 'Tempat pensil elegan untuk meja kerja Anda.', 45000, ARRAY['https://img-wrapper.vercel.app/image?url=https://img-wrapper.vercel.app/image?url=https://placehold.co/300x300/708158/ffffff?text=Tempat+Pensil'], 50, 4.3, aksesori_id),
        ('Keranjang Multifungsi', 'Keranjang serbaguna untuk penyimpanan mainan atau laundry.', 110000, ARRAY['https://img-wrapper.vercel.app/image?url=https://img-wrapper.vercel.app/image?url=https://placehold.co/300x300/c8bea2/ffffff?text=Keranjang'], 25, 4.6, aksesori_id),
        ('Clutch Pesta Elegan', 'Clutch malam yang mewah dan ramah lingkungan.', 250000, ARRAY['https://img-wrapper.vercel.app/image?url=https://img-wrapper.vercel.app/image?url=https://placehold.co/300x300/f59e0b/ffffff?text=Clutch'], 10, 4.9, premium_id);
    END IF;
END;
$$;
